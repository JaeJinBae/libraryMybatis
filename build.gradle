/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar{
    version = 1.0
    // application으로 개발 할 경우 (apply plugin: 'application') main()메서드가 있는 클래스를 반드시 지정해야한다.
    mainClassName = 'kr.or.dgit.mybatis_code.TestUI'
    baseNmae = 'TestUI'
   	// jar파일안에 들어있는 구성을 생각해 보면 된다.
    appendix = 'bin'
    
    // jar을 실행시키기 위해서는 manifest가 필요하다.
    manifest{
        attributes 'Title':baseNmae, 'Version':version, 'Main-Class':mainClassName
    }

	//실행가능한 jar파일 설정 아이콘을 더블클릭했을 때 실행가능하게 하는것
	dependsOn configurations.runtime
}
